#!/bin/bash
# Script to startup aloja and excute basic commands in an atomated manner
# Goethe University Frankfurt
# Big Data Lab
# Author: Raphael Radowitz
# Copyright (c) 2017 
# Version 2.1

echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
echo "============================ ALOJA-startup script ============================="
echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
echo ""
echo ""
echo ""

# Ititialization
[ ! "$SCRIPT"] && SCRIPT=$(readlink -f "$0") # retrieve script path
[ ! "$ALOJA_DIR" ] && ALOJA_DIR=$(dirname "$SCRIPT") # aloja source dir.
[ ! "$BENCH_PATH" ] && BENCH_PATH="/vagrant/aloja-bench" # path to run_bench file on VM


mainmenu() {
  echo "==========================================================="
  echo "Press 1 - Start Aloja"
  echo "Press 2 - Check Vagrant Global Status"
  echo "Press 3 - Stop Aloja"
  echo "Press 4 - Run Benchmark"
  echo "Press 5 - Connect to Vagrant-99-00"
  echo "Press 6 - Connect to Vagrant-99-01"
  echo "Press 7 - Open mysql on aloja-web"
  echo "Press 8 - Results"
  echo "Press 9 - RESTART"
  echo "Press x - EXIT"
  echo "==========================================================="
  echo ""
  read -p "Input Selection: " mainmenuinput
  echo "___________________________________________________________"
  
  #Navigte to the aloja directory
  cd "$ALOJA_DIR"

  if [ "$mainmenuinput" = "1" ]; then
            alojastartup
            mainmenu
        elif [ "$mainmenuinput" = "2" ]; then
  	    vagrant global-status
            echo ""
	    echo ""
	    mainmenu
        elif [ "$mainmenuinput" = "3" ]; then
	    vagrant destroy -f
            echo ""
	    echo ""
	    mainmenu
        elif [ "$mainmenuinput" = "4" ]; then
            runbench            
            echo ""
	    echo ""
	    mainmenu
	elif [ "$mainmenuinput" = "5" ]; then
            connect            
            updateBash
	elif [ "$mainmenuinput" = "6" ]; then
            coonect2
        elif [ "$mainmenuinput" = "7" ]; then
            connectmysql                
        elif [ "$mainmenuinput" = "8" ]; then
            getResults
            echo ""
            echo "" 
            echo "==========================================================="
            echo "Results are generated and saved in your home directory"
            echo "--> $file"
            echo "==========================================================="
            echo ""
            mainmenu
        elif [ "$mainmenuinput" = "9" ]; then
            vagrant destroy -f               
            alojastartup
	    mainmenu
        elif [ "$mainmenuinput" = "x" ];then
            exit
        elif [ "$mainmenuinput" = "X" ];then
            exit
        else
            clear
            mainmenu
  fi
}

# Aloja startup
alojastartup() {
  echo "==========================================================="
  echo "Bringing up aloja-web & vagrant-99-00 & vagrant-99-01"
  echo ""
  vagrant up
  echo ""
  echo Starting vagrant-99-00 and vagrant-99-01
  echo ""
  vagrant up vagrant-99-00 vagrant-99-01 
  echo ""
  echo Connecting to vagrant-99-00
  echo "==========================================================="
}

# Run benchmarks
runbench() {
  echo ""
  echo "Press 1 to run Native Spark"
  echo "Press 2 to run D2F-Bench-spark"
  echo "Press 3 to run D2F-Bench-hive"
  echo "Press 4 to run any other custom script"
  echo "Press x to return to mainmenu"
  echo ""
  read -p "Select Benchmark: " benchinput
  setBenchScaleFactor
  if [ "$benchinput" = "1" ]; then
            setNativeParam
    	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH; 
	    TPCH_SCALE_FACTOR=$scaleFactor NATIVE_FORMAT=$informat NATIVE_FILTER=$filter NATIVE_SPRINT=$sprint NATIVE_OUT_FORMAT=$outformat $BENCH_PATH/run_benchs.sh -b Native_spark && exec \$SHELL"
	    mainmenu
        elif [ "$benchinput" = "2" ]; then
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH; 
	    TPCH_SCALE_FACTOR=$scaleFactor $BENCH_PATH/run_benchs.sh -b D2F-Bench-spark && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "3" ]; then
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH;
	    TPCH_SCALE_FACTOR=$scaleFactor $BENCH_PATH/run_benchs.sh -b D2F-Bench-hive && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "4" ]; then
	    read -p "Custom Benchmark: " benchscript	
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH;$benchscript && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "x" ]; then
	    clear
            mainmenu
	else 
	    clear
            mainmenu
  fi
}

setBenchScaleFactor() {
  scaleFactor=1
  echo "Choose scale factor: 1,2,3 ... 100, ...,1000"
  read -p "Select scale factor: " scaleFactor
}


setNativeParam(){
  echo "Input Format"
  echo "Press 1 : text"
  echo "Press 2 : orc"
  echo "Press 3 : parquet"
  echo "Press 4 : Hive Table"
  read -p "Select input format: " input1 
  if [ "$input1" = "1" ]; then
      informat="text"   
    elif [ "$input1" = "2" ]; then
      informat="orc"
    elif [ "$input1" = "3" ]; then
      informat="parquet"
    elif [ "$input1" = "4" ]; then
      informat="tbl"
    else
      "not supported input"
       clear
       mainmenu
  fi

  echo "Turn Predicate Filter on or off"
  echo "Press 0 : off"
  echo "Press 1 : on"
  read -p "Select filter on or off: " filter

  if [ "$filter" = "0" || "$filter" = "1" ]; then
    echo "filter was set to: $filter"
  else 
     "not supported input"
       clear
       mainmenu 
  fi

  echo "Turn print to screen on or off"
  echo "Press 0 : off"
  echo "Press 1 : on"
  read -p "Select Filter on or off: " sprint

  if [ "$sprint" = "0" ]; then
    echo "Choose output format"
    echo "Press 1 : json"
    echo "Press 2 : orc"
    echo "Press 3 : parquet"
    echo "Press 4 : text"
    read -p "Select output format: " input2
  
    if [ "$input2" = "1" ]; then
        outformat="json"   
      elif [ "$input2" = "2" ]; then
        outformat="orc"
      elif [ "$input2" = "3" ]; then
        outformat="parquet"
      elif [ "$input2" = "4" ]; then
        outformat="text"
      else
        "not supported input"
         clear
         mainmenu
    fi
  fi
  
}

# Open Terminal to vagrant-99-00
connect() {
  gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH && exec \$SHELL"
  mainmenu
}

# Open Terminal to vagrant-99-01
coonect2() {
  gnome-terminal -x vagrant ssh vagrant-99-01
  mainmenu
}

# Open MySQL @ aloja-web
connectmysql() {
  gnome-terminal -x vagrant ssh -- -t 'sudo mysql'
  mainmenu
}

getResults(){
  # create file to save results in home directory
  file=~/$(date +"%Y%m%d%H%M")-Local-Results.txt
  
  # set header
  echo -e "JOB \tSCALE_FACTOR \tQUERY \tTIME \tSTATUS \tNATIVE_FORMAT \tNATIVE_FILTER \n" > $file
  
  # append the results to created file 
  for run in ${ALOJA_DIR}/blobs/jobs_*/2017*;
  do 
    declare -A EXEC_TIME && 
    eval $(grep "EXEC_TIME" $run/config.sh) && 
    declare -A EXEC_STATUS && 
    eval $(grep "EXEC_STATUS" $run/config.sh) && 
    declare -A  NATIVE_FORMAT && 
    eval $(grep "NATIVE_FORMAT" $run/config.sh) &&
    declare -A  NATIVE_FILTER && 
    eval $(grep "NATIVE_FILTER" $run/config.sh) &&  
    for bench in ${!EXEC_TIME[@]}; 
    do 
      config=${run##*_ETH_}; 
      scale=${config##*_S}; 
      echo -e "${run##*/}\t${scale%%_*}\t$bench\t${EXEC_TIME[$bench]}\t"${EXEC_STATUS[$bench]}"\t${NATIVE_FORMAT}\t${NATIVE_FILTER}"; 
    done && 
    unset EXEC_TIME EXEC_STATUS; 
  done | grep -v validate | sort >> $file
}

mainmenu

