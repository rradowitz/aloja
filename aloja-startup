#!/bin/sh
# Script to startup aloja and excute basic commands in an atomated manner
# Goethe University Frankfurt
# Big Data Lab
# Author: Raphael Radowitz
# Date of creation: Mai 2017

echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
echo "============================ Aloja-start up script ============================"
echo "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
echo ""
echo ""
echo ""

# Ititialization
[ ! "$SCRIPT"] && SCRIPT=$(readlink -f "$0")
#[ ! "$ALOJA_DIR" ] && ALOJA_DIR="/home/rradowitz/Documents/aloja" #aloja source dir.
[ ! "$ALOJA_DIR" ] && ALOJA_DIR=$(dirname "$SCRIPT") #aloja source dir.
[ ! "$BENCH_PATH" ] && BENCH_PATH="/vagrant/aloja-bench" #path to run_bench file on VM


mainmenu () {
  echo "================================================="
  echo "Press 1 - Start Aloja & Run a Benchmark"
  echo "Press 2 - Check Vagrant Global Status"
  echo "Press 3 - Vagrant Destroy"
  echo "Press 4 - Run Benchmark"
  echo "Press 5 - Connect to Vagrant-99-00"
  echo "Press 6 - Connect to Vagrant-99-01"
  echo "Press 7 - Open mysql on aloja-web"
  echo "Press 8 - Results"
  echo "Press 9 - RESTART"
  echo "Press x - EXIT"
  echo "================================================="
  echo ""
  read -p "Input Selection: " mainmenuinput
  echo "_________________________________________________"
  
  #Navigte to the aloja directory
  cd "$ALOJA_DIR"  

  if [ "$mainmenuinput" = "1" ]; then
            alojastartup
            mainmenu
        elif [ "$mainmenuinput" = "2" ]; then
  	    vagrant global-status
            echo ""
	    echo ""
	    mainmenu
        elif [ "$mainmenuinput" = "3" ]; then
	    vagrant destroy -f
            echo ""
	    echo ""
	    mainmenu
        elif [ "$mainmenuinput" = "4" ]; then
            runbench            
            echo ""
	    echo ""
	    mainmenu
	elif [ "$mainmenuinput" = "5" ]; then
            connect            
            updateBash
	elif [ "$mainmenuinput" = "6" ]; then
            coonect2
        elif [ "$mainmenuinput" = "7" ]; then
            connectmysql                
        elif [ "$mainmenuinput" = "8" ]; then
 	    getResults
        elif [ "$mainmenuinput" = "9" ]; then
            vagrant destroy -f               
            alojastartup
	    mainmenu
        elif [ "$mainmenuinput" = "x" ];then
            exit
        elif [ "$mainmenuinput" = "X" ];then
            exit
        else
            clear
            mainmenu
  fi
}

# Aloja startup
alojastartup () {
  echo "================================================="
  echo "Bringing up aloja-web & vagrant-99-00 & vagrant-99-01"
  echo ""
  vagrant up
  echo ""
  echo Starting vagrant-99-00 and vagrant-99-01
  echo ""
  vagrant up vagrant-99-00 vagrant-99-01 
  echo ""
  echo Connecting to vagrant-99-00
  echo "================================================="
}

# Run benchmarks
runbench () {
  echo ""
  echo "Press 1 to run Native Spark"
  echo "Press 2 to run D2F-Bench-spark"
  echo "Press 3 to run D2F-Bench-hive"
  echo "Press 4 to run any other custom script"
  echo "Press x to return to mainmenu"
  echo ""
  read -p "Select Benchmark: " benchinput
  if [ "$benchinput" = "1" ]; then
            setBenchScaleFactor
  	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH; 
	    TPCH_SCALE_FACTOR=$scaleFactor $BENCH_PATH/run_benchs.sh -b Native_spark && exec \$SHELL"
	    mainmenu
        elif [ "$benchinput" = "2" ]; then
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH; 
	    TPCH_SCALE_FACTOR=$scaleFactor $BENCH_PATH/run_benchs.sh -b D2F-Bench-spark && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "3" ]; then
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH;
	    TPCH_SCALE_FACTOR=$scaleFactor $BENCH_PATH/run_benchs.sh -b D2F-Bench-hive && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "4" ]; then
	    read -p "Custom Benchmark: " benchscript	
	    gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH;$benchscript && exec \$SHELL"
	    mainmenu
	elif [ "$benchinput" = "x" ]; then
	    clear
            mainmenu
	else 
	    clear
            mainmenu
  fi
}

setBenchScaleFactor() {
  scaleFactor=1
  echo "Please choose scale factor: 1,2,3 ... 100, ...,1000"
  read -p "Select Benchmark: " scaleFactor 
}

# Open Terminal to vagrant-99-00
connect() {
  gnome-terminal -x vagrant ssh vagrant-99-00 -- -t "cd $BENCH_PATH && exec \$SHELL"
  mainmenu
}

# Open Terminal to vagrant-99-01
coonect2() {
  gnome-terminal -x vagrant ssh vagrant-99-01
  mainmenu
}

# Open MySQL @ aloja-web
connectmysql() {
  gnome-terminal -x vagrant ssh -- -t 'sudo mysql'
  mainmenu
}

getResults(){
  file=/home/rradowitz/$(date +"%Y%m%d%H%M")-Local-Results.txt

  echo -e "JOB \t HDD \t SCALE_FACTOR \t QUERY \t TIME \t STATUS \t NATIVE_FORMAT \t NATIVE_API \t NATIVE_SPRINT \t  NATIVE_OUTPUT_DIR \t CACHED \t ENGINE \t SMV \n" > $file

  for run in /home/rradowitz/Documents/aloja/blobs/jobs_*/2017*; 
 	do declare -A EXEC_TIME 
        && eval $(grep "EXEC_TIME" $run/config.sh)
        && declare -A EXEC_STATUS 
        && eval $(grep "EXEC_STATUS" $run/config.sh) 
        && declare -A NATIVE_FORMAT 
        && eval $(grep "NATIVE_FORMAT" $run/config.sh) 
        && for bench in ${!EXEC_TIME[@]}; 
		do config= ${run##*_ETH_}; scale=${config##*_S}; 
                echo -e "${run##*/}\t${config%%_*}\t${scale%%_*}\t$bench\t${EXEC_TIME[$bench]}\t"${EXEC_STATUS[$bench]}"\t${NATIVE_FORMAT}\t${NATIVE_SPRINT}\t${NATIVE_OUTPUT_DIR}\t$(grep -q "drop_cache" $run/config.sh && echo drop || echo cached)\t$(grep "^ENGINE=" $run/config.sh|cut -d= -f2)\t$(grep "Spark=" $run/config.sh|cut -d= -f2)\tSMV$(grep "SPARK_MAJOR_VERSION=" $run/config.sh|cut -d= -f2)"; done 
       && unset EXEC_TIME EXEC_STATUS; 
       done | grep -v validate | sort >> $file  
}

mainmenu







